MODEL:
#  WEIGHTS: "https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl"
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"         #权重文件的路径。在这里，使用的是ImageNet预训练的ResNet-50模型
  META_ARCHITECTURE: "GeneralizedRCNN"         
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
  FPN:
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[32], [64], [128], [256], [512]]  # One size for each in feature map
    #p2 base_anchors [-16,-16,16,16]  p3 base_anchors [-32,-32,32,32]   p4 base_anchors [-64,-64,64,64]   p5 base_anchors [-128,-128,128,128]  p6 base_anchors [-256,-256,256,256]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]  # Three aspect ratios (same for all in feature maps)
  RPN:
    IN_FEATURES: ["p2", "p3", "p4", "p5", "p6"]
    PRE_NMS_TOPK_TRAIN: 2000  # Per FPN level    训练阶段保留的提议数量
    PRE_NMS_TOPK_TEST: 1000  # Per FPN level      测试阶段保留的提议数量
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1000        #训练阶段保留的最终提议数量
    POST_NMS_TOPK_TEST: 1000         #测试阶段保留的最终提议数量
  ROI_HEADS:
    NAME: "StandardROIHeads"
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    NUM_CLASSES: 60       #目标分类的数量

  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2                   #全连接层个数
    POOLER_RESOLUTION: 7       #ROI Pooler输出的特征图大小
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 4             #卷积层的数量
    POOLER_RESOLUTION: 14       #ROI Pooler输出的特征图大小
    # BOUNDARY_POOLER_RESOLUTION: 28
    # BOUNDARY_IN_FEATURES: ["p2"]
    # BOUNDARY_NUM_CONV: 2
  # BOUNDARY_MASK_HEAD:                  #!!!!!加了BOUNDARY_MASK_HEAD
  #   POOLER_RESOLUTION: 28
  #   IN_FEATURES: ["p2"]
  #   NUM_CONV: 2
DATASETS:
  TRAIN: ("d2sa_train_aug","d2sa_train")
  TEST: ("d2sa_val",)
SOLVER:           #优化器相关设定
  IMS_PER_BATCH: 2      #每张图片的batch size
  BASE_LR: 0.005
  STEPS: (40000, 60000)
  MAX_ITER: 70000       #最大迭代次数
  OPT_TYPE: "SGD"         #优化器类型
  CHECKPOINT_PERIOD: 40000
TEST:
  EVAL_PERIOD: 2000   #每隔多少个迭代进行一次测试
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)        #训练图像最小边长
  MASK_FORMAT: "bitmask"                        #掩码的格式
OUTPUT:
  TRAIN_VERSION: 'mask_rcnn_amodal_d2sa_res50_1x'      #训练版本的名称

